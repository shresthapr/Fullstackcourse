:root {
	--background-color: cornsilk;
	--font: "Quicksand", sans-serif;
	--light-color: greenyellow;
	--dark-color: turquoise;
}
body {
	/* background-image: linear-gradient(green, blue, yellow, turquoise);
  background-image: linear-gradient(-90deg, red, yellow); */

	background-repeat: no-repeat;
	height: 100vh;
	font-family: var(--font);
}

.card,
.card1 {
	height: 200px;
	width: 150px;
	background: var(--light-color);
	display: flex;
	margin: 0 auto;
	justify-content: center;
	align-items: center;
	box-shadow: 0 0 5px var(--light-color);
	background: var(--background-color);
	transition: all 2s 0;
}

.card {
	transform: rotate(125deg); /* rotate by +- degree along x axis */
	transform: skewY(25deg); /*increases the Y by +- 25 deg  on Y axis */
	transform: skewX(
		25deg
	); /*increases the Y by +- 25 deg  on X axis (0nly one skey either X or Y can be used at a time */

	transform: scale(2, 5); /* changes the scale in (x y) order */

	transform: translateY(
		100px
	); /* Moves the Y axis with height(number) instead of angle */
	transform: translateX(-100px);
	transform: translate(100px, 100px);
	transform: translate3d(100px, 100px, 100px);

	perspective: 200px;
	transform: perspective(-200px) rotateY(45deg); /* rotates y with 45 deg and changes the perspective by 200 i.e brings the front part by 200px making it seem to appear closer the smaller the px value the clsoer they seems to appear: also the rotate degree if + brings the front end if - brings the rear end: rotate Y means it is rotating about the Y axis. 
   */
}

.card1 {
	transform: rotateX(
		-45deg
	); /* This will only work if used with perspective because the rotation about x axis is not visible in 2d they only appear bugger and smaller.  */
}
.circle {
	border-radius: 50%;
	height: 150px;
	width: 150px;

	background-image: radial-gradient(yellow 20%, red 50%, green 30%);
	display: flex;
	margin: 0 auto;
	justify-content: center;
	align-items: center;
	box-shadow: 0 0 5px var(--light-color);

	transition: all 2s 0;
	animation-name: Customname;
	animation-duration: 1s;
	animation-iteration-count: 3; /* only does the animation 3 times, if infinite it keeps on doing */
}

@keyframes Customname {
	from {
		background: var(--background-color);
	}
	to {
		background-color: var(--light-color);
		height: 200px;
		width: 200px;
	}
}

.circle2 {
	position: relative;

	border-radius: 50%;
	height: 200px;
	width: 200px;
	background: var(--light-color);

	display: flex;
	margin: 0 auto;
	justify-content: center;
	align-items: center;
	box-shadow: 0 0 5px var(--light-color);
	background: var(--background-color);
	transition: all 2s 0;
	animation-name: Customname1;
	animation-duration: 3s;
	animation-iteration-count: 3; /* only does the animation 3 times, if infinite it keeps on doing */
}
@keyframes Customname1 {
	0% {
		top: 0;
		left: 0;
	}
	25% {
		top: 0;
		left: 200px;
		background-color: greenyellow;
		height: 100px;
		width: 100px;
		border-radius: 50%;
	}
	50% {
		top: 200px;
		left: 200px;
		background-color: blue;
		height: 250px;
		width: 250px;
		border-radius: 10%;
	}
	75% {
		top: 200px;
		left: 0px;
		background-color: red;
		height: 100px;
		width: 100px;
		border-radius: 50%;
	}
	100% {
		top: 0;
		left: 0px;
	}
	from {
		background: var(--background-color);
	}
	to {
		background-color: var(--light-color);
		height: 100px;
		width: 100px;
	}
}
